---
- name: Luks application check 
  user: root
  hosts: all
  vars:
     satellite_ip: 10.32.170.160
     satellite_user: admin
     satellite_psw: redhat01
     host_name: host

  tasks:
 #  - name: Check /etc/crypttab contains existence
  #   file:
  #     path: /etc/crypttab
  #     state: absent     
  #   check_mode: yes
  #   register: checkFile
     
   - name: Check wether /etc/crypttab contains "home"
     lineinfile:
       path: /etc/crypttab
       state: absent
       regexp: 'home*'       
     check_mode: yes
     register: homeEncrypted
   
   - name: Check wether /etc/crypttab contains "home"
     lineinfile:
       path: /etc/crypttab
       state: absent
       regexp: 'swap*'       
     check_mode: yes
     register: swapEncrypted
     
   - name: Delete any encrypted fact in /etc/rhsm/facts/encrypted.facts
     lineinfile:
       path: /etc/rhsm/facts/encrypted.facts
       state: absent
       regexp: 'encrypted*'       
     
   - name: Add fact file encrypted.facts in /etc/rhsm/facts/ as not encypted host if needed
     lineinfile:
       path: /etc/rhsm/facts/encrypted.facts
       state: present
       create: yes
       backup: yes
       line: {"encrypted": "no"}
          
   - name: Add fact file encrypted.facts in /etc/rhsm/facts/ as encrypted host if that is the case
     replace:
       path: /etc/rhsm/facts/encrypted.facts
       regexp: 'no'
       replace: 'yes'
       backup: yes
     when: (homeEncrypted.changed and swapEncrypted)
    
#  - name: Copy default system facts file /var/lib/rhsm/facts/facts.json to a temporary file
 #    copy:
 #      src: /var/lib/rhsm/facts/facts.json
 #      dest: /root/updated_facts_tmp.json
 #      remote_src: yes
       
#   - name: Fetch hostname
#     shell: cat "/etc/hostname"
#     register: host_name 

   - name: Give json format to temporary file
     lineinfile:
       dest: /root/updated_facts_tmp.json
       create: yes
       state: present
       #      regexp: '\{'
       line: "{\"name\": \"{{ inventory_hostname }}\", \"facts\": {\"encrypted\": \"no\"}}'
       
#   - name: Add fact as not encrypted to temporary file
#     replace:
#       path: /root/updated_facts_tmp.json
#       regexp: '}'
 #      replace: ', "encrypted": "no"}}'
       
   - name: Add fact file encrypted.facts in /var/lib/rhsm/facts/facts.json as encypted host if that is the case
     replace:
       path: /root/updated_facts_tmp.json 
       regexp: '"encrypted": "no"'
       replace: '"encrypted": "yes"'
     when: (homeEncrypted.changed and swapEncrypted)
               
   - name: Send facts to Satellite
     command: 'curl -X POST -u {{ satellite_user }}:{{ satellite_psw }} -k -H "Content-Type:application/json" -d @updated_facts_tmp.json https://{{ satellite_ip }}/api/v2/hosts/facts'
      
 #  - name: Delete temporary file
 #    file:
 #      path: /root/updated_facts_tmp.json
  #     state: absent
  
     
     #command: 'curl -X POST -u admin:redhat01 -k -H "Content-Type:application/json" -d @updated_facts_tmp.json https://10.32.170.160/api/v2/hosts/facts'     
   #  uri:
   #    url: http://{{ satellite_ip }}/api/v2/hosts/facts
   #    method: POST
   #    user: "{{ satellite_user }}"
   #    password: "{{ satellite_psw }}"
   #    body: data
   #    return_content: no
   #    validate_certs: no
   #    HEADER_Content-Type: application/json
   #    HEADER_Accept: :application/json,version=2
       
       
         
